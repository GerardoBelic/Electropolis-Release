#ifndef CLOSEST_PALETTE_COLOR_HLSL
#define CLOSEST_PALETTE_COLOR_HLSL

/*int aap_64_size = 64;
static float3 aap_64[64] = {
	float3(0.0235294, 0.0235294, 0.0313726),
	float3(0.0784314, 0.0627451, 0.0745098),
	float3(0.231373, 0.0901961, 0.145098),
	float3(0.45098, 0.0901961, 0.176471),
	float3(0.705882, 0.12549, 0.164706),
	float3(0.87451, 0.243137, 0.137255),
	float3(0.980392, 0.415686, 0.0392157),
	float3(0.976471, 0.639216, 0.105882),
	float3(1, 0.835294, 0.254902),
	float3(1, 0.988235, 0.25098),
	float3(0.839216, 0.94902, 0.392157),
	float3(0.611765, 0.858824, 0.262745),
	float3(0.34902, 0.756863, 0.207843),
	float3(0.0784314, 0.627451, 0.180392),
	float3(0.101961, 0.478431, 0.243137),
	float3(0.141176, 0.321569, 0.231373),
	float3(0.0705882, 0.12549, 0.12549),
	float3(0.0784314, 0.203922, 0.392157),
	float3(0.156863, 0.360784, 0.768627),
	float3(0.141176, 0.623529, 0.870588),
	float3(0.12549, 0.839216, 0.780392),
	float3(0.65098, 0.988235, 0.858824),
	float3(1.0, 1.0, 1.0),
	float3(0.996078, 0.952941, 0.752941),
	float3(0.980392, 0.839216, 0.721569),
	float3(0.960784, 0.627451, 0.592157),
	float3(0.909804, 0.415686, 0.45098),
	float3(0.737255, 0.290196, 0.607843),
	float3(0.47451, 0.227451, 0.501961),
	float3(0.25098, 0.2, 0.32549),
	float3(0.141176, 0.133333, 0.203922),
	float3(0.133333, 0.109804, 0.101961),
	float3(0.196078, 0.168627, 0.156863),
	float3(0.443137, 0.254902, 0.231373),
	float3(0.733333, 0.458824, 0.278431),
	float3(0.858824, 0.643137, 0.388235),
	float3(0.956863, 0.823529, 0.611765),
	float3(0.854902, 0.878431, 0.917647),
	float3(0.701961, 0.72549, 0.819608),
	float3(0.545098, 0.576471, 0.686275),
	float3(0.427451, 0.458824, 0.552941),
	float3(0.290196, 0.329412, 0.384314),
	float3(0.2, 0.223529, 0.254902),
	float3(0.258824, 0.141176, 0.2),
	float3(0.356863, 0.192157, 0.219608),
	float3(0.556863, 0.321569, 0.321569),
	float3(0.729412, 0.458824, 0.415686),
	float3(0.913725, 0.709804, 0.639216),
	float3(0.890196, 0.901961, 1),
	float3(0.72549, 0.74902, 0.984314),
	float3(0.517647, 0.607843, 0.894118),
	float3(0.345098, 0.552941, 0.745098),
	float3(0.278431, 0.490196, 0.521569),
	float3(0.137255, 0.403922, 0.305882),
	float3(0.196078, 0.517647, 0.392157),
	float3(0.364706, 0.686275, 0.552941),
	float3(0.572549, 0.862745, 0.729412),
	float3(0.803922, 0.968627, 0.886275),
	float3(0.894118, 0.823529, 0.666667),
	float3(0.780392, 0.690196, 0.545098),
	float3(0.627451, 0.52549, 0.384314),
	float3(0.47451, 0.403922, 0.333333),
	float3(0.352941, 0.305882, 0.266667),
	float3(0.258824, 0.223529, 0.203922)
};*/

void closest_palette_color_float(float3 in_color, out float3 out_color)
{
	int aap_64_size = 64;
	float3 aap_64[64] = {
		float3(0.0235294, 0.0235294, 0.0313726),
		float3(0.0784314, 0.0627451, 0.0745098),
		float3(0.231373, 0.0901961, 0.145098),
		float3(0.45098, 0.0901961, 0.176471),
		float3(0.705882, 0.12549, 0.164706),
		float3(0.87451, 0.243137, 0.137255),
		float3(0.980392, 0.415686, 0.0392157),
		float3(0.976471, 0.639216, 0.105882),
		float3(1, 0.835294, 0.254902),
		float3(1, 0.988235, 0.25098),
		float3(0.839216, 0.94902, 0.392157),
		float3(0.611765, 0.858824, 0.262745),
		float3(0.34902, 0.756863, 0.207843),
		float3(0.0784314, 0.627451, 0.180392),
		float3(0.101961, 0.478431, 0.243137),
		float3(0.141176, 0.321569, 0.231373),
		float3(0.0705882, 0.12549, 0.12549),
		float3(0.0784314, 0.203922, 0.392157),
		float3(0.156863, 0.360784, 0.768627),
		float3(0.141176, 0.623529, 0.870588),
		float3(0.12549, 0.839216, 0.780392),
		float3(0.65098, 0.988235, 0.858824),
		float3(1.0, 1.0, 1.0),
		float3(0.996078, 0.952941, 0.752941),
		float3(0.980392, 0.839216, 0.721569),
		float3(0.960784, 0.627451, 0.592157),
		float3(0.909804, 0.415686, 0.45098),
		float3(0.737255, 0.290196, 0.607843),
		float3(0.47451, 0.227451, 0.501961),
		float3(0.25098, 0.2, 0.32549),
		float3(0.141176, 0.133333, 0.203922),
		float3(0.133333, 0.109804, 0.101961),
		float3(0.196078, 0.168627, 0.156863),
		float3(0.443137, 0.254902, 0.231373),
		float3(0.733333, 0.458824, 0.278431),
		float3(0.858824, 0.643137, 0.388235),
		float3(0.956863, 0.823529, 0.611765),
		float3(0.854902, 0.878431, 0.917647),
		float3(0.701961, 0.72549, 0.819608),
		float3(0.545098, 0.576471, 0.686275),
		float3(0.427451, 0.458824, 0.552941),
		float3(0.290196, 0.329412, 0.384314),
		float3(0.2, 0.223529, 0.254902),
		float3(0.258824, 0.141176, 0.2),
		float3(0.356863, 0.192157, 0.219608),
		float3(0.556863, 0.321569, 0.321569),
		float3(0.729412, 0.458824, 0.415686),
		float3(0.913725, 0.709804, 0.639216),
		float3(0.890196, 0.901961, 1),
		float3(0.72549, 0.74902, 0.984314),
		float3(0.517647, 0.607843, 0.894118),
		float3(0.345098, 0.552941, 0.745098),
		float3(0.278431, 0.490196, 0.521569),
		float3(0.137255, 0.403922, 0.305882),
		float3(0.196078, 0.517647, 0.392157),
		float3(0.364706, 0.686275, 0.552941),
		float3(0.572549, 0.862745, 0.729412),
		float3(0.803922, 0.968627, 0.886275),
		float3(0.894118, 0.823529, 0.666667),
		float3(0.780392, 0.690196, 0.545098),
		float3(0.627451, 0.52549, 0.384314),
		float3(0.47451, 0.403922, 0.333333),
		float3(0.352941, 0.305882, 0.266667),
		float3(0.258824, 0.223529, 0.203922)
	};
	
	int bubblegum_16_size = 16;
	float3 bubblegum_16[16] = {
		float3(0.0862745, 0.0901961, 0.101961),
		float3(0.498039, 0.0235294, 0.133333),
		float3(0.839216, 0.141176, 0.0666667),
		float3(1, 0.517647, 0.14902),
		float3(1, 0.819608, 0),
		float3(0.980392, 0.992157, 1),
		float3(1, 0.501961, 0.643137),
		float3(1, 0.14902, 0.454902),
		float3(0.580392, 0.129412, 0.415686),
		float3(0.262745, 0, 0.403922),
		float3(0.137255, 0.286275, 0.458824),
		float3(0.407843, 0.682353, 0.831373),
		float3(0.74902, 1, 0.235294),
		float3(0.0627451, 0.823529, 0.458824),
		float3(0, 0.470588, 0.6),
		float3(0, 0.156863, 0.34902)
	};
	
	int minecraft_size = 48;
	float3 minecraft[48] = {
		float3(0.917647, 0.929412, 0.929412),
		float3(0.945098, 0.466667, 0.0862745),
		float3(0.745098, 0.27451, 0.709804),
		float3(0.235294, 0.690196, 0.854902),
		float3(0.976471, 0.776471, 0.160784),
		float3(0.443137, 0.729412, 0.101961),
		float3(0.933333, 0.564706, 0.678431),
		float3(0.247059, 0.270588, 0.282353),
		float3(0.556863, 0.560784, 0.529412),
		float3(0.0823529, 0.541176, 0.568627),
		float3(0.482353, 0.168627, 0.678431),
		float3(0.207843, 0.227451, 0.619608),
		float3(0.45098, 0.282353, 0.160784),
		float3(0.333333, 0.431373, 0.109804),
		float3(0.631373, 0.156863, 0.137255),
		float3(0.0862745, 0.0862745, 0.105882),
		float3(0.811765, 0.835294, 0.839216),
		float3(0.878431, 0.380392, 0.00392157),
		float3(0.662745, 0.188235, 0.623529),
		float3(0.141176, 0.537255, 0.780392),
		float3(0.945098, 0.686275, 0.0823529),
		float3(0.368627, 0.662745, 0.0980392),
		float3(0.839216, 0.396078, 0.560784),
		float3(0.215686, 0.227451, 0.243137),
		float3(0.490196, 0.490196, 0.45098),
		float3(0.0823529, 0.466667, 0.533333),
		float3(0.392157, 0.12549, 0.611765),
		float3(0.176471, 0.184314, 0.560784),
		float3(0.376471, 0.235294, 0.12549),
		float3(0.286275, 0.356863, 0.141176),
		float3(0.556863, 0.129412, 0.129412),
		float3(0.0313726, 0.0392157, 0.0588235),
		float3(0.823529, 0.698039, 0.631373),
		float3(0.635294, 0.329412, 0.14902),
		float3(0.588235, 0.345098, 0.427451),
		float3(0.447059, 0.427451, 0.541176),
		float3(0.729412, 0.521569, 0.137255),
		float3(0.407843, 0.462745, 0.207843),
		float3(0.635294, 0.305882, 0.309804),
		float3(0.227451, 0.164706, 0.141176),
		float3(0.529412, 0.419608, 0.384314),
		float3(0.341176, 0.356863, 0.356863),
		float3(0.462745, 0.27451, 0.337255),
		float3(0.290196, 0.235294, 0.356863),
		float3(0.301961, 0.2, 0.141176),
		float3(0.298039, 0.32549, 0.164706),
		float3(0.560784, 0.239216, 0.184314),
		float3(0.145098, 0.0901961, 0.0627451)
	};

	int min_dist_index = -1;
	float min_dist = 100.0;
	for (int i = 0; i < minecraft_size; ++i)
	{
		//float dist = distance(in_color, minecraft[i]);
		float dist = pow(((in_color.r - minecraft[i].r) * 0.3), 2.0) +
					 pow(((in_color.g - minecraft[i].g) * 0.59), 2.0) +
					 pow(((in_color.b - minecraft[i].b) * 0.11), 2.0);
		
		if (dist < min_dist)
		{
			min_dist = dist;
			min_dist_index = i;
		}
	}
	
	out_color = minecraft[min_dist_index];
	//out_color = in_color * float3(0.5, 0.5, 0.5);
	//out_color = aap_64[4];
}

#endif